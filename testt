-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Silent Aim Variables
local SilentAimEnabled = enable
local FOVRadius = 150  -- Default size of the FOV circle
local FOVCircle

-- Create GUI for Mobile Players
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SilentAimGui"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Default color red
toggleButton.Text = "Silent Aim: OFF"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 24
toggleButton.Parent = screenGui

-- Function to get closest player within FOV
local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = FOVRadius

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local screenPosition, onScreen = Camera:WorldToScreenPoint(character.HumanoidRootPart.Position)
            local centerPosition = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
            local mouseDistance = (Vector2.new(screenPosition.X, screenPosition.Y) - centerPosition).Magnitude

            if mouseDistance < shortestDistance and onScreen then
                shortestDistance = mouseDistance
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end

-- Function to get predicted position of a player
local function GetPredictedPosition(character)
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        local velocity = rootPart.Velocity
        return rootPart.Position + (velocity * 0.165)  -- Adjust prediction factor as needed
    end
    return rootPart.Position
end

-- Override raycasting to redirect aim with prediction
local oldIndex
oldIndex = hookmetamethod(game, "__index", function(self, key)
    if SilentAimEnabled and key == "Hit" and self == Mouse then
        local targetPlayer = GetClosestPlayer()
        if targetPlayer and targetPlayer.Character then
            local predictedPosition = GetPredictedPosition(targetPlayer.Character)
            return CFrame.new(predictedPosition)
        end
    end
    return oldIndex(self, key)
end)

-- Create FOV Circle for visualization
if SilentAimEnabled then
    FOVCircle = Drawing.new("Circle")
    FOVCircle.Thickness = 1
    FOVCircle.NumSides = 100
    FOVCircle.Radius = FOVRadius
    FOVCircle.Filled = false
    FOVCircle.ZIndex = 999
    FOVCircle.Color = Color3.fromRGB(255, 0, 0)
    FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)  -- Center the circle
end

-- Update FOV circle position
RunService.RenderStepped:Connect(function()
    if SilentAimEnabled and FOVCircle then
        FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    end
end)

-- Toggle Silent Aim function
local function ToggleSilentAim(enabled)
    SilentAimEnabled = enabled
    if SilentAimEnabled then
        if not FOVCircle then
            FOVCircle = Drawing.new("Circle")
            FOVCircle.Thickness = 1
            FOVCircle.NumSides = 100
            FOVCircle.Radius = FOVRadius
            FOVCircle.Filled = false
            FOVCircle.ZIndex = 999
            FOVCircle.Color = Color3.fromRGB(255, 0, 0)
            FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        end
        FOVCircle.Visible = true
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
        toggleButton.Text = "Silent Aim: ON"
    else
        if FOVCircle then
            FOVCircle.Visible = false
        end
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red
        toggleButton.Text = "Silent Aim: OFF"
    end
end

-- Handle button click for toggling Silent Aim
toggleButton.MouseButton1Click:Connect(function()
    ToggleSilentAim(not SilentAimEnabled)
end)
