local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local ScreenGui = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")

local SilentAimEnabled = false
local predictionFactor = 0.165
local FOVSize = 125  -- FOV Size
local lockBodyPart = "Head" -- Default body part to lock onto

-- Create FOV Circle using Drawing API
local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 1
FOVCircle.NumSides = 100
FOVCircle.Radius = FOVSize -- Default radius, adjust as needed
FOVCircle.Filled = false
FOVCircle.ZIndex = 999
FOVCircle.Color = Color3.fromRGB(255, 0, 0)  -- Default color red

-- Create GUI for Silent Aim activation
ScreenGui.Name = "SilentAimGui"
ScreenGui.Parent = LocalPlayer.PlayerGui

TextButton.Name = "SilentAimButton"
TextButton.Size = UDim2.new(0, 200, 0, 50)
TextButton.Position = UDim2.new(0, 10, 0, 10)
TextButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red when disabled
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.Text = "Silent Aim: OFF"
TextButton.Parent = ScreenGui

-- Update FOV Circle position and color
local function UpdateFOVCircle()
    local screenSize = Camera.ViewportSize
    local center = Vector2.new(screenSize.X / 2, screenSize.Y / 2)

    FOVCircle.Position = center
    FOVCircle.Color = SilentAimEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)  -- Green if enabled, red if disabled
end

-- Update TextButton based on Silent Aim state
local function UpdateTextButton()
    TextButton.BackgroundColor3 = SilentAimEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    TextButton.Text = SilentAimEnabled and "Silent Aim: ON" or "Silent Aim: OFF"
end

-- Raycasting Silent Aim Functions
local function GetPredictedPosition(character)
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        local velocity = rootPart.Velocity
        return rootPart.Position + (velocity * predictionFactor)
    end
    return rootPart.Position
end

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local rootPart = character.HumanoidRootPart
            local predictedPosition = GetPredictedPosition(character)
            local ray = Ray.new(Camera.CFrame.Position, (predictedPosition - Camera.CFrame.Position).Unit * 500)
            local hitPart, hitPosition = workspace:FindPartOnRay(ray, LocalPlayer.Character)

            if hitPart and hitPart.Parent:FindFirstChild("Humanoid") then
                local distance = (Camera.CFrame.Position - hitPosition).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    return closestPlayer
end

-- Hook the Metamethod for raycasting
local oldIndex
oldIndex = hookmetamethod(game, "__index", function(self, key)
    if SilentAimEnabled and key == "Hit" and self == Mouse then
        local targetPlayer = GetClosestPlayer()
        if targetPlayer and targetPlayer.Character then
            local predictedPosition = GetPredictedPosition(targetPlayer.Character)
            return CFrame.new(predictedPosition)
        end
    end
    return oldIndex(self, key)
end)

-- Input handling for Silent Aim activation
TextButton.MouseButton1Click:Connect(function()
    SilentAimEnabled = not SilentAimEnabled
    UpdateTextButton()
    if SilentAimEnabled then
        print("Silent Aim Enabled")
    else
        print("Silent Aim Disabled")
    end
end)

-- Update loop for FOV circle
RunService.RenderStepped:Connect(function()
    -- Update FOV circle position and color
    UpdateFOVCircle()
end)
